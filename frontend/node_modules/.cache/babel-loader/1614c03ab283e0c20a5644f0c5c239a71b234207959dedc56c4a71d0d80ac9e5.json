{"ast":null,"code":"var _jsxFileName = \"/Users/manntalati/Documents/Projects/trading-assistant/frontend/src/components/PriceChart.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PriceChart = ({\n  data = [],\n  ticker = 'AAPL'\n}) => {\n  // Generate mock data if none provided\n  const mockData = data.length > 0 ? data : Array.from({\n    length: 20\n  }, (_, i) => ({\n    time: `${i}:00`,\n    price: 150 + Math.random() * 10 - 5,\n    volume: Math.floor(Math.random() * 1000000)\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-64\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: mockData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#2a2a2a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\",\n          stroke: \"#a0a0a0\",\n          fontSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: \"#a0a0a0\",\n          fontSize: 12,\n          domain: ['dataMin - 1', 'dataMax + 1']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: '#1a1a1a',\n            border: '1px solid #2a2a2a',\n            borderRadius: '8px',\n            color: '#ffffff'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"price\",\n          stroke: \"#00ff88\",\n          strokeWidth: 2,\n          dot: false,\n          activeDot: {\n            r: 4,\n            fill: '#00ff88'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = PriceChart;\nexport default PriceChart;\nvar _c;\n$RefreshReg$(_c, \"PriceChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","PriceChart","data","ticker","mockData","length","Array","from","_","i","time","price","Math","random","volume","floor","className","children","width","height","strokeDasharray","stroke","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","fontSize","domain","contentStyle","backgroundColor","border","borderRadius","color","type","strokeWidth","dot","activeDot","r","fill","_c","$RefreshReg$"],"sources":["/Users/manntalati/Documents/Projects/trading-assistant/frontend/src/components/PriceChart.js"],"sourcesContent":["import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst PriceChart = ({ data = [], ticker = 'AAPL' }) => {\n  // Generate mock data if none provided\n  const mockData = data.length > 0 ? data : Array.from({ length: 20 }, (_, i) => ({\n    time: `${i}:00`,\n    price: 150 + Math.random() * 10 - 5,\n    volume: Math.floor(Math.random() * 1000000)\n  }));\n\n  return (\n    <div className=\"w-full h-64\">\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart data={mockData}>\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#2a2a2a\" />\n          <XAxis \n            dataKey=\"time\" \n            stroke=\"#a0a0a0\"\n            fontSize={12}\n          />\n          <YAxis \n            stroke=\"#a0a0a0\"\n            fontSize={12}\n            domain={['dataMin - 1', 'dataMax + 1']}\n          />\n          <Tooltip\n            contentStyle={{\n              backgroundColor: '#1a1a1a',\n              border: '1px solid #2a2a2a',\n              borderRadius: '8px',\n              color: '#ffffff'\n            }}\n          />\n          <Line \n            type=\"monotone\" \n            dataKey=\"price\" \n            stroke=\"#00ff88\" \n            strokeWidth={2}\n            dot={false}\n            activeDot={{ r: 4, fill: '#00ff88' }}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default PriceChart; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtG,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI,GAAG,EAAE;EAAEC,MAAM,GAAG;AAAO,CAAC,KAAK;EACrD;EACA,MAAMC,QAAQ,GAAGF,IAAI,CAACG,MAAM,GAAG,CAAC,GAAGH,IAAI,GAAGI,KAAK,CAACC,IAAI,CAAC;IAAEF,MAAM,EAAE;EAAG,CAAC,EAAE,CAACG,CAAC,EAAEC,CAAC,MAAM;IAC9EC,IAAI,EAAE,GAAGD,CAAC,KAAK;IACfE,KAAK,EAAE,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;IACnCC,MAAM,EAAEF,IAAI,CAACG,KAAK,CAACH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,OAAO;EAC5C,CAAC,CAAC,CAAC;EAEH,oBACEb,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1BjB,OAAA,CAACF,mBAAmB;MAACoB,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAAAF,QAAA,eAC7CjB,OAAA,CAACR,SAAS;QAACU,IAAI,EAAEE,QAAS;QAAAa,QAAA,gBACxBjB,OAAA,CAACJ,aAAa;UAACwB,eAAe,EAAC,KAAK;UAACC,MAAM,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxDzB,OAAA,CAACN,KAAK;UACJgC,OAAO,EAAC,MAAM;UACdL,MAAM,EAAC,SAAS;UAChBM,QAAQ,EAAE;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eACFzB,OAAA,CAACL,KAAK;UACJ0B,MAAM,EAAC,SAAS;UAChBM,QAAQ,EAAE,EAAG;UACbC,MAAM,EAAE,CAAC,aAAa,EAAE,aAAa;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,eACFzB,OAAA,CAACH,OAAO;UACNgC,YAAY,EAAE;YACZC,eAAe,EAAE,SAAS;YAC1BC,MAAM,EAAE,mBAAmB;YAC3BC,YAAY,EAAE,KAAK;YACnBC,KAAK,EAAE;UACT;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFzB,OAAA,CAACP,IAAI;UACHyC,IAAI,EAAC,UAAU;UACfR,OAAO,EAAC,OAAO;UACfL,MAAM,EAAC,SAAS;UAChBc,WAAW,EAAE,CAAE;UACfC,GAAG,EAAE,KAAM;UACXC,SAAS,EAAE;YAAEC,CAAC,EAAE,CAAC;YAAEC,IAAI,EAAE;UAAU;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACe,EAAA,GA3CIvC,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}